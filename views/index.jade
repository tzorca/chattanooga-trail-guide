extends layout

block content
	div#searchpanel
		span.bigger Sort by:&nbsp;&nbsp;
		a#sortByName.pointer.sort Name
		span &nbsp;|&nbsp;
		a#sortByTrailLength.pointer.sort Longest First
		span &nbsp;|&nbsp;
		a#sortByTrailDifficulty.pointer.sort Easiest First
		span &nbsp;|&nbsp;
		a#sortByDrivingDistance.pointer.sort Closest First

	div#originchooser.hidden(title='Enter a location')
		p Choose a city near Chattanooga
		input#origin
		button#sortbydrivedist Go
	br
	div#parkstable
		each place in siteContent.trailList
			div.placecell
				a(href='trail?place=' + place.code + '&season=' + settings.season.code)
					img(alt=place.name src=place.tablePhoto)
				br
				strong
					a(href='trail?place=' + place.code + '&season=' + settings.season.code) #{place.name}
				br
				div.left
					span.lighter.smaller.indent #{place.subtitle}
					br
					span.lighter.vsm.indent
						strong trail: 
						|#{place.totalMiles} mi

					if place.drivingtime && place.drivingtime.length
						|&emsp;
						strong drive:
						|#{(place.drivingdist).toFixed(0)} mi ( #{(place.drivingtime * 1.1 / 60).toFixed(0)} min

	div.center
		div#updates
			p
				strong #{siteContent.updates[0].date}
				br
				|!{siteContent.updates[0].description}

	script.
		var settings = !{JSON.stringify(settings)};

		// TODO: Set up origin chooser
		//- $("#originchooser").dialog();
		//- closeOriginChooser();
		//- $("#originchooser").removeClass('hidden');
		//- $("#origin").autocomplete({
		//- 	source: siteContent.origins,
		//- 	delay: 0,
		//- 	autoFocus: true
		//- });
		//- $("#origin").keypress(function(event) {
		//- 	if (event.which == 13) {
		//- 		event.preventDefault();
		//- 		changeSorting(settings, currentSeason, 'driveDist');
		//- 	}
		//- });

		// Set up sorting
		$("#sortbydrivedist").click(function() {
			changeSorting(settings, currentSeason, 'driveDist');
		});
		$('#sortByName').click(function() {
			changeSorting(settings, currentSeason, 'name');
		});
		$('#sortByTrailLength').click(function() {
			changeSorting(settings, currentSeason, 'runDist');
		});
		$('#sortByTrailDifficulty').click(function() {
			changeSorting(settings, currentSeason, 'difficulty');
		});
		$('#sortByDrivingDistance').click(function() {
			openOriginChooser(settings);
		});

		function changeSorting(settings, currentSeason, newSortBy) {
			if (settings.sortBy == newSortBy && settings.sortBy != "driveDist") {
				return;
			}
			settings.sortBy = newSortBy;

			if (settings.sortBy == "driveDist") {
				settings.origin = document.getElementById('origin').value;
				assignRouteInfo();
				closeOriginChooser();
			}
		}

		function assignRouteInfo(settings) {
			// Get routeInfo objects that have the chosen origin (such as Chattanooga, TN)
			var relevantRouteInfoList = [];
			var lowerCaseOrigin = settings.origin.toLowerCase();
			routeInfoList.forEach(function(routeInfo) {
				if (routeInfo.origin.toLowerCase() == lowerCaseOrigin) {
				relevantRouteInfoList.push(routeInfo);
				}
			});

			// Loop through place objects, and assign them the corresponding
			// time and distance from the routeInfo objects we found
			siteContent.places.forEach(function(place) {
				var currentDist, bestDist = 1000;
				var currentTime;

				for (var j = 0; j < place.locations.length; j++) {
					var jLoc = place.locations[j];
					var locationKey = jLoc[1].toFixed(6) + "," + jLoc[2].toFixed(6);

					for (var k = 0; k < relevantRouteInfoList.length; k++) {
						if (relevantRouteInfoList[k].destination != locationKey) {
							continue;
						}

						currentDist = relevantRouteInfoList[k].dist;
						currentTime = relevantRouteInfoList[k].time;

						if (currentDist < bestDist) {
							bestDist = currentDist;
							place.drivingtime = currentTime;
							place.drivingdist = currentDist;
						}

						break;
					}
				}
			});
		}

		function assignDifficultyInfo() {
			siteContent.places.forEach(function(place) {
				place.difficulty = parseDifficulty(place.difficultySummary);
			});
		}

		function parseDifficulty(difficultySummary) {
			var i, pathRating = 0, terrainRating = 0;
			for (i = 0; i < siteContent.pathTypes.length; i++) {
				if (difficultySummary.indexOf(siteContent.pathTypes[i]) != -1) {
					pathRating = i;
					break;
				}
			}
			for (i = 0; i < siteContent.terrainTypes.length; i++) {
				if (difficultySummary.indexOf(siteContent.terrainTypes[i]) != -1) {
					terrainRating = i;
				}
			}

			return pathRating * siteContent.terrainTypes.length + terrainRating;
		}

		// Rebuild parks table
		function buildParksTable(settings, currentSeason) {
			// Re-sort the table
			if (settings.sortBy == "driveDist") {
				assignRouteInfo();
				siteContent.places.sort(driveDistSort);
			} else if (settings.sortBy == "name") {
				siteContent.places.sort(nameSort);
			} else if (settings.sortBy == "runDist") {
				siteContent.places.sort(runDistSort);
			} else if (settings.sortBy == "difficulty") {
				assignDifficultyInfo();
				siteContent.places.sort(difficultySort);
			}

			$("#parkstable").html(parksTableHtml);
		}

		// Sorting methods
		function nameSort(a, b) {
			if (a.name < b.name) {
				return -1;
			} else if (a.name > b.name) {
				return 1;
			}
			return 0;
		}

		function driveDistSort(a, b) {
			return a.drivingdist - b.drivingdist;
		}

		function runDistSort(a, b) {
			return b.totalMiles - a.totalMiles;
		}

		function difficultySort(a, b) {
			return a.difficulty - b.difficulty;
		}


